# Query: description
# ContextLines: 1

62 risultati - 17 file

package.json:
  3    "version": "1.0.0",
  4:   "description": "Un'app per trovare compagni di pasto virtuali",
  5    "main": "index.js",

BACKEND/package.json:
  3    "version": "1.0.0",
  4:   "description": "Backend per l'applicazione TableTalk",
  5    "main": "server.js",

BACKEND/controllers/mealController.js:
   21    // Verifica campi obbligatori
   22:   const requiredFields = ['title', 'type', 'date', 'maxParticipants', 'description', 'language', 'topics'];
   23    const missingFields = requiredFields.filter(field => !req.body[field]);

   37  
   38:   if (typeof req.body.description !== 'string' || req.body.description.trim().length < 10) {
   39:     return next(new ErrorResponse('La descrizione deve essere di almeno 10 caratteri', 400, 'INVALID_DESCRIPTION'));
   40    }

  148        { title: { $regex: req.query.search, $options: 'i' } },
  149:       { description: { $regex: req.query.search, $options: 'i' } },
  150        { topics: { $in: [new RegExp(req.query.search, 'i')] } }

BACKEND/models/Meal.js:
  19    },
  20:   description: {
  21      type: String,

BACKEND/routes/meal.js:
   73      .withMessage('Il titolo deve essere tra 10 e 100 caratteri'),
   74:   check('description', 'La descrizione è obbligatoria')
   75      .not()

  132      .isLength({ min: 10, max: 100 }),
  133:   check('description', 'Descrizione non valida')
  134      .optional()

  202      .isIn(['inappropriato', 'spam', 'violenza', 'altro']),
  203:   check('description', 'Descrizione segnalazione obbligatoria')
  204      .not()

FRONTEND/client/package-lock.json:
  7830                  "get-proto": "^1.0.0",
  7831:                 "get-symbol-description": "^1.1.0",
  7832                  "globalthis": "^1.0.4",

  9535          },
  9536:         "node_modules/get-symbol-description": {
  9537              "version": "1.1.0",
  9538:             "resolved": "https://registry.npmjs.org/get-symbol-description/-/get-symbol-description-1.1.0.tgz",
  9539              "integrity": "sha512-w9UMqWwJxHNOvoNzSJ2oPF5wvYcvP7jUvYzhp67yEhTi17ZDBBC1z9pTdGuzjD+EFIqLSYRweZjqfiPzQ06Ebg==",

FRONTEND/client/public/index.html:
  13      <meta
  14:       name="description"
  15        content="TableTalk - Connetti persone attraverso il cibo. Trova compagni per pranzi e cene, condividi esperienze culinarie e fai nuove amicizie."

  19      <meta property="og:title" content="TableTalk - Connetti persone attraverso il cibo" />
  20:     <meta property="og:description" content="Trova compagni per pranzi e cene, condividi esperienze culinarie e fai nuove amicizie." />
  21      <meta property="og:type" content="website" />

FRONTEND/client/public/manifest.json:
   3    "name": "TableTalk - Connetti persone attraverso il cibo",
   4:   "description": "Trova compagni per pranzi e cene, condividi esperienze culinarie e fai nuove amicizie",
   5    "icons": [

  40        "short_name": "Cerca",
  41:       "description": "Cerca nuovi pasti disponibili",
  42        "url": "/search",

  47        "short_name": "Miei Pasti",
  48:       "description": "Visualizza i tuoi pasti",
  49        "url": "/my-meals",

FRONTEND/client/src/pages/Meals/CreateMealPage.js:
   15      maxParticipants: 4,
   16:     description: '',
   17      language: 'Italiano',

   34      const validateForm = () => {
   35:       const { title, type, date, maxParticipants, description, language, topics } = formData;
   36        

   41          maxParticipants: maxParticipants >= 2 && maxParticipants <= 10,
   42:         description: description.trim().length >= 10,
   43          language: language.trim().length >= 2,

   58                  maxParticipants: Number(maxParticipants),
   59:                 description: description.trim(),
   60                  language,

  132          title: formData.title.trim(),
  133:         description: formData.description.trim(),
  134          type: formData.type,

  225              <div className="form-group">
  226:               <label htmlFor="description">Descrizione*</label>
  227                <textarea
  228:                 id="description"
  229:                 name="description"
  230:                 value={formData.description}
  231                  onChange={handleChange}

  234                  maxLength={1000}
  235:                 className={formData.description.trim().length > 0 && formData.description.trim().length < 10 ? 'is-invalid' : ''}
  236                />
  237                <small className="form-text">
  238:                 Minimo 10 caratteri ({formData.description.length}/1000)
  239                </small>

FRONTEND/client/src/pages/Meals/EditMealPage.js:
   11      title: '',
   12:     description: '',
   13      date: '',

   29            title: data.title,
   30:           description: data.description,
   31            date: data.date,

  119              <div>
  120:               <label htmlFor="description" className="block text-sm font-medium text-gray-700 mb-2">
  121                  Descrizione *

  123                <textarea
  124:                 id="description"
  125:                 name="description"
  126:                 value={formData.description}
  127                  onChange={handleChange}

FRONTEND/client/src/pages/Meals/MealDetail.js:
   20    const {
   21:     _id, title, type, date, maxParticipants, description,
   22      host, participants, language, meetingLink, status

  130            
  131:           <p className="mb-4">{description}</p>
  132            

FRONTEND/client/src/pages/Meals/MealDetailPage.js:
  130                  <h2>Descrizione</h2>
  131:                 <p>{meal.description}</p>
  132                </div>

FRONTEND/client/src/pages/Profile/MealHistory.js:
  62          
  63:         <p className="meal-description">{meal.description}</p>
  64        </Link>

FRONTEND/client/src/services/mealService.js:
  120        maxParticipants: mealData.maxParticipants,
  121:       description: mealData.description,
  122        language: mealData.language,

  141        maxParticipants: mealData.maxParticipants,
  142:       description: mealData.description,
  143        language: mealData.language,

  154      // Verifica che tutti i campi obbligatori siano presenti e validi
  155:     const requiredFields = ['title', 'type', 'date', 'maxParticipants', 'description', 'language', 'topics'];
  156      const missingFields = requiredFields.filter(field => {

  175  
  176:     if (typeof mealData.description !== 'string' || mealData.description.trim().length < 10) {
  177:       console.error('❌ Descrizione non valida:', mealData.description);
  178:       throw new MealServiceError('La descrizione deve essere di almeno 10 caratteri', 400, 'INVALID_DESCRIPTION');
  179      }

  211        title: mealData.title.trim(),
  212:       description: mealData.description.trim(),
  213        date: new Date(mealData.date).toISOString(),

FRONTEND/client/src/styles/MealDetail.css:
  34  
  35: .meal-description {
  36    background-color: white;

FRONTEND/client/src/styles/MealsPage.css:
  252    
  253:   .meal-description {
  254      color: #666;

FRONTEND/client/src/styles/NotFoundPage.css:
  30  
  31: .not-found-description {
  32    font-size: 1.2rem;

  62    
  63:   .not-found-description {
  64      font-size: 1rem;
